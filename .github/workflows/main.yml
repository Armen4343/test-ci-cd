name: Build and Deploy
on:
  push:
    tags:
      - 'v*.*.*'

env:
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

jobs:
  build:
    runs-on: ubuntu-latest
    name: build docker image and push to registry

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Enter root folder
        run: cd httpdocs/
        
      - name: Copy .env.deployment to .env
        run: cp .env.deployment .env
        
      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract Git tag
        id: extract_tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
      
      - name: Build Docker image
        run: docker build -t "$DOCKER_REGISTRY":${{ steps.extract_tag.outputs.TAG }} .

      - name: Push Docker image to Docker Hub
        run: docker push "$DOCKER_REGISTRY":${{ steps.extract_tag.outputs.TAG }}
        
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Extract Git tag
      id: extract_tag
      run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
        
    - name: deploy to prod
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_HOST_USER }}
        password: ${{ secrets.SSH_HOST_USER_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        script: |
          docker pull "${{ secrets.DOCKER_REGISTRY }}:${{ steps.extract_tag.outputs.TAG }}"
          
          if docker ps -a --format '{{.Names}}' | grep -w it_zeepup > /dev/null; then
          docker rm -f it_zeepup
          fi
          
          docker run --name it_zeepup --restart always -d -p 8000:80 "${{ secrets.DOCKER_REGISTRY }}:${{ steps.extract_tag.outputs.TAG }}"
